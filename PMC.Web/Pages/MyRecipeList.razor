@page "/myrecipelist"
@using PMC.DataModel
@using PMC.Data
@using PMC.Web.Data
@inject HomeURIService HomeURIService
@inject NavigationManager NavManager
@inject SelectedRecipeService SelectedRecipeService
<!--TODO  This currently works as a select option, but is there a way to display the list, and make it clickable so the user doesn't have to use the dropdown?--->
<div align="right">
    <button style=" font-size:14px; background-color:white; border-width:0px; border-color:white" @onclick="@OpenModal">Help</button>
    <div align="left">
        <BlazorModal Title="Recipe List" IsOpened="isOpened">
            <ModalBody>
                From your <b>Recipe List</b> you can either select a recipe from the list displayed on the left, <br />
                or you may search for a recipe by keywords.  Up to four keywords can be used in the search box.
            </ModalBody>
            <ModalFooter>
            </ModalFooter>
        </BlazorModal>
    </div>
</div>
<h3>My Recipe List</h3>
@if (SelectedRecipeService.RecipeCount == 0)
{
    <p>
        We could not find any recipes. If you are new to PMC, select <b>Help</b> in the navigation area for instructions on how to create recipes
        or select <b>Add a Recipe</b>.
    </p>
}
@if (SelectedRecipeService.RecipeCount != 0)
{
    <RecipeListWithDetails></RecipeListWithDetails>
}
<hr />



@code {
    [Inject]
    private RepoFactory repoFactory { get; set; }
    private int userID;
    protected string contentArea;
    protected int recipeCount = 0;
    private List<Recipe> recipeList = new List<Recipe>();
    private Recipe recipe = new Recipe();
    private int displayWidth = 0;
    //TODO change string for search
    //private string recipeSearch = "Enter a recipe name here";
    private List<Recipe> filteredRecipes = new List<Recipe>();
    //private int recipeSearchCount = 0;
    //private string searchUnsuccessful = "";
    private bool viewAllRecipes = false;
    //private string selectedRecipeName = "";

#pragma warning disable 1998
    protected override async Task OnInitializedAsync()
    {
        userID = repoFactory.UserID;

        SelectedRecipeService.RecipeID = 0;
        var repo = repoFactory.Get<PMC.Data.RecipeRepo>();
        recipeList = repo.GetRecipesByUserID(userID).ToList();
        displayWidth = recipe.MaxRecipeNameSize;

    }
#pragma warning restore 1998

    /*
    // This can be used when a search function is added to the MyRecipe page 
    protected void SearchRecipes()
    {
        var repo = repoFactory.Get<PMC.Data.RecipeRepo>();
        var rcpList = repo.SearchRecipeNameByUserID(recipeSearch, userID).ToList();
        filteredRecipes = rcpList;
        recipeSearchCount = rcpList.Count();
        searchUnsuccessful = "";
        if (recipeSearchCount > 0)
        {
            recipeSearchCount += 3;
        }
        if (recipeSearchCount == 0)
        {
            searchUnsuccessful = "We could not find any recipe containing that word.";
        }
        StateHasChanged();
        isOpened = false;
    }
    */

    protected void MyRecipe(ChangeEventArgs e)
    {
        isOpened = false;
        NavManager.NavigateTo(HomeURIService.HomeUri + "myrecipe");
    }

    private void goToAddRecipe()
    {
        NavManager.NavigateTo(HomeURIService.HomeUri + "addmyrecipe");
    }

    private void expand()
    {
        if (viewAllRecipes == false)
        {
            viewAllRecipes = true;
            StateHasChanged();
        }

    }
    private void collapse()
    {
        if (viewAllRecipes == true)
        {
            viewAllRecipes = false;
            StateHasChanged();
        }

    }

    bool isOpened = false;
    void OpenModal()
    {
        isOpened = true;
    }
    void CloseModal()
    {
        isOpened = false;
    }


}
