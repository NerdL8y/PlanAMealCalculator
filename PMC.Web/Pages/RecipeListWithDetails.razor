@page "/recipelistwithdetails"
@using PMC.DataModel
@using PMC.Data
@using PMC.Web.Data
@inject SelectedRecipeService SelectedRecipeService
@inject HomeURIService HomeURIService
@inject NavigationManager NavManager 


<hr />
<table class="display-rows">
    <tr class="meals" >
        <th style=" vertical-align:middle;">Recipe Name</th>
        <th style="text-align: center; width:50px">Servings</th>
        <th style="text-align: center; width:150px">Total Recipe Time</th>
        <th style="text-align: center; width:50px">View</th>
    </tr>

    @foreach (var list in recipes)
    {
        <tr class="meals">
            <td style="padding-left:10px">@list.RcpName</td>
            <td style="text-align:center">@list.RcpServingsQty</td>
            <td style="text-align:center">@list.RecipeTotalPrepTimeHHMM</td>
            <td style="text-align:center; vertical-align:middle; padding-bottom:0px;">
                <label>
                    <input name="choiceCompID" type="radio" tabindex="-1"
                           @onchange="@(() => {  SelectedRecipeService.RecipeID = list.RecipeID; })"
                           @oninput="@MyRecipe">
                </label>
            </td>
        </tr>
    }
</table>
<br />

@code {

    [Inject]
    private RepoFactory repoFactory { get; set; }
    private int userID = 0;
    private int recipeCount = 0;
    //private int column1size = 0;
    //private int column2size = 0;

    private List<Recipe> recipes = new List<Recipe>();

    protected override async Task OnInitializedAsync()
    {
        userID = repoFactory.UserID;

        var repo = repoFactory.Get<PMC.Data.RecipeRepo>();
        recipes = repo.GetRecipesByUserID(userID).ToList();
        recipeCount = recipes.Count();

    }

    protected void MyRecipe(ChangeEventArgs e)
    {
        NavManager.NavigateTo(HomeURIService.HomeUri + "myrecipe");
    }
}
